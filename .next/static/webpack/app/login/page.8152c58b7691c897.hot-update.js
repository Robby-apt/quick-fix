"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./lib/api/client.ts":
/*!***************************!*\
  !*** ./lib/api/client.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   apiClient: () => (/* binding */ apiClient)\n/* harmony export */ });\n// lib/api/client.ts\nclass ApiError extends Error {\n    static isApiError(error) {\n        return error instanceof ApiError;\n    }\n    constructor(status, message, details){\n        super(message), this.status = status, this.details = details;\n        this.name = \"ApiError\";\n        Object.setPrototypeOf(this, ApiError.prototype);\n    }\n}\nclass ApiClient {\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseUrl, \"/api\").concat(endpoint);\n        const headers = new Headers({\n            \"Content-Type\": \"application/json\",\n            ...options.headers || {}\n        });\n        // Add auth token if available\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            headers.set('Authorization', \"Bearer \".concat(token));\n        }\n        const config = {\n            headers,\n            credentials: \"include\",\n            ...options\n        };\n        try {\n            const response = await fetch(url, config);\n            // Handle empty responses\n            if (response.status === 204) {\n                return {};\n            }\n            const data = await response.json().catch(()=>({}));\n            if (!response.ok) {\n                throw new ApiError(response.status, (data === null || data === void 0 ? void 0 : data.error) || response.statusText || \"Request failed\", data === null || data === void 0 ? void 0 : data.details);\n            }\n            return data;\n        } catch (error) {\n            if (ApiError.isApiError(error)) {\n                throw error;\n            }\n            throw new ApiError(500, \"Network error occurred\", {\n                originalError: error\n            });\n        }\n    }\n    // ========== Authentication ==========\n    async registerClient(data) {\n        return this.request(\"/auth/register/client\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async registerHandyman(data) {\n        return this.request(\"/auth/register/handyman\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async login(email, password) {\n        return this.request(\"/auth/login\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n    }\n    async logout() {\n        return this.request(\"/auth/logout\", {\n            method: \"POST\"\n        });\n    }\n    async getCurrentUser() {\n        return this.request(\"/auth/me\");\n    }\n    // ========== Services ==========\n    async createService(data) {\n        return this.request(\"/services\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async getServices(params) {\n        const query = new URLSearchParams();\n        if (params === null || params === void 0 ? void 0 : params.category) query.set(\"category\", params.category);\n        if (params === null || params === void 0 ? void 0 : params.q) query.set(\"q\", params.q);\n        if (params === null || params === void 0 ? void 0 : params.handyman) query.set(\"handyman\", params.handyman);\n        return this.request(\"/services?\".concat(query.toString()));\n    }\n    // ========== Bookings ==========\n    async createBooking(data) {\n        return this.request(\"/bookings\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async getBookings() {\n        return this.request(\"/bookings\");\n    }\n    async updateBookingStatus(bookingId, status) {\n        return this.request(\"/bookings/\".concat(bookingId, \"/status\"), {\n            method: \"PATCH\",\n            body: JSON.stringify({\n                status\n            })\n        });\n    }\n    // ========== Reviews ==========\n    async createReview(data) {\n        return this.request(\"/reviews\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    // ========== Messages ==========\n    async sendMessage(data) {\n        return this.request(\"/messages\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async getConversations() {\n        return this.request(\"/messages\");\n    }\n    async getConversationMessages(otherPartyId) {\n        return this.request(\"/messages?with=\".concat(otherPartyId));\n    }\n    // ========== Admin ==========\n    async getAdminStats() {\n        return this.request(\"/admin/stats\");\n    }\n    async verifyHandyman(handymanId) {\n        return this.request(\"/admin/verify-handyman\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                handymanId\n            })\n        });\n    }\n    constructor(){\n        this.baseUrl =  false ? 0 : \"http://localhost:3000\";\n    }\n}\nconst apiClient = new ApiClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/client.ts\n"));

/***/ })

});